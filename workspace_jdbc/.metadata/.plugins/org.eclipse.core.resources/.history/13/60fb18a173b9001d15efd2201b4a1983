package main;

import java.util.Scanner;

import commons.EncryptionUtils;
import dao.MembersDAO;
import dao.MessagesDAO;
import dto.MembersDTO;
import dto.MessagesDTO;

public class Main {
	public static void main(String[] args) {
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
		}catch(Exception e) {
			System.out.println("라이브러리 탐색 실패");
			e.printStackTrace();
			System.exit(0);
		}
		
		final Main self = new Main();
		final String url = "jdbc:oracle:thin:@localhost:1521:xe";
		final String dbID = "board";
		final String dbPW = "board";
		MembersDAO dao_member = new MembersDAO(url, dbID, dbPW);
		MessagesDAO dao_message = new MessagesDAO(url, dbID, dbPW);
		int menu = 0;
		String curID = null;

		try(Scanner sc = new Scanner(System.in)){
			//로그인 파트
			while(true) {
				String infoText = "<< menu >>" + System.lineSeparator()
									+"1. 로그인" + System.lineSeparator()
									+"2. 회원가입" + System.lineSeparator()
									+"0. 종료" + System.lineSeparator()
									+">>";
				menu = self.inputNumber(sc, infoText);
				if(menu == 0) {
					System.out.println("시스템을 종료합니다.");
					System.exit(0);
				}else if(menu == 1) {
					System.out.println("<< 로그인 >>");
					String id = self.inputText(sc, "ID를 입력해주세요 : ");
					String pw = self.inputText(sc, "PW를 입력해주세요 : ");
					pw = EncryptionUtils.sha256(pw);
					if(dao_member.isLogin(id, pw)) {
						curID = id;
						System.out.println(id + "님 환영합니다.");
						break;
					}else {
						System.out.println("로그인 실패. ID 또는 PW를 다시 확인해주세요.");
					}
				}else if(menu == 2) {
					while(true) {
						System.out.println("<< 회원 가입 >>"); //아이디, 패스워드, 이름, 연락처
						System.out.println("회원가입 중 종료를 원하면 언제든지 0을 입력해주세요.");
						String id = self.inputText(sc, "ID를 입력해주세요 : ");
						if(id.equals("0")) break;
						if(dao_member.isIdExist(id)) {
							System.out.println("이미 사용중인 아이디입니다.");
							continue;
						}
						String pw = self.inputText(sc, "PW를 입력해주세요 : ");
						if(pw.equals("0"))break;
						pw = EncryptionUtils.sha256(pw);
						String name = self.inputText(sc, "이름을 입력해주세요 : ");
						if(name.equals("0")) break;
						String contact = self.inputText(sc, "연락처를 입력해주세요 : ");
						if(contact.equals("0")) break;
						if(0 < dao_member.insert(new MembersDTO(id,pw,name,contact,null))) {
							System.out.println("회원가입 성공");
						}else {
							System.out.println("회원가입 실패");
						}
						break;
					}
				}else {
					System.out.println("메뉴를 다시 확인해주세요.");
				}
			}
			
			//Message 파트
			while(true) {
				String infoText = "<< 경량 게시판 프로그램 >>" + System.lineSeparator()
									+"1. 신규 메시지 등록" + System.lineSeparator() //작성자, 메시지 직접 입력
									+"2. 메시지 목록 출력" + System.lineSeparator()
									+"3. 메시지 삭제" + System.lineSeparator() // seq로 삭제
									+"4. 메시지 수정" + System.lineSeparator() //seq로 수정하되, writer 및 message 만 수정가능
									+"5. 메시지 검색" + System.lineSeparator() //writer 또는 message에 검색어를 포함하는 대상
									+"6. 내 정보보기" + System.lineSeparator()
									+"0. 종료" + System.lineSeparator()
									+">>";
				menu = self.inputNumber(sc, infoText);
				if(menu == 0) {
					System.out.println("시스템을 종료합니다.");
					System.exit(0);
				}else if(menu == 1) {
					String message = self.inputText(sc, "등록할 메시지 : ");
					if(0 < dao_message.insert(new MessagesDTO(curID, message, null))) {
						System.out.println("입력 성공");
					}else {
						System.out.println("입력 실패");
					}
				}else if(menu == 2) {
					
				}else if(menu == 3) {
					
				}else if(menu == 4) {
					
				}else if(menu == 5) {
					
				}else if(menu == 6) {
					
				}else {
					System.out.println("메뉴를 다시 확인해주세요.");
				}
			}
		}catch(Exception e) {
			e.printStackTrace();
			System.exit(0);
		}
	}
	private int inputNumber(Scanner sc, String infoText) {
		int result = 0;
		while(true) {
			try {
				System.out.print(infoText);
				result = Integer.parseInt(sc.nextLine());
				break;
			}catch(Exception e) {
				System.out.println("숫자 형식으로 입력해 주셔야 합니다.");
				e.printStackTrace();
			}
		}
		return result;
	}
	
	private String inputText(Scanner sc, String infoText) {
		System.out.print(infoText);
		return sc.nextLine();
	}
}
