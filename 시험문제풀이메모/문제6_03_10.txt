[문제: 쇼핑몰 회원정보를 조회하는 소스코드를 작성하고, 해당 코드를 실행시켰을 때 정상적으로 실행할 수 없는 문제가 발생하였다]
[조건 :
소스코드를 분석하여 어떤 오류가 있는지 모두 찾아서 서술한 후 그에 대한 원인과 조치내용(해결방법)을 서술하시오.
단, 모든 클래스는 import 되었다고 가정하고 ShopMember클래스는 변경하지 않으며, toString메소드는 생략한다.
계정은 test_01이고 계정 비밀번호는 1234이다.]

[문제점]
[불확실]
a. '모든 클래스가 import'되었다고 가정하고~ 란 부분 때문에, 다른 부분에서 작성되었을지 모르나, 'Class.forname(~)' 부분이 작성되지 않아 DriverManager를 쓸 수 있을지 확실하지 않습니다.
(확인해 보니 문제 없이 사용 가능했습니다.)
그리고 프로젝트에 ojdbc6도 따로 연결해줘야 합니다.

[확실]
1.사용되는 'stmt'는 단순한 Statement 객체인데, 사용은 PreparedStatement 방식으로 사용하고 있습니다. 이를 수정해줘야 할 것입니다.

2.쿼리문에 '?'를 마련해놓고는 이를 채우지 않고 'stmt.executeQuery()'를 하고 있습니다. 이를 채워주는 부분을 상단에 추가해야 합니다.

3. 'MEMBER_AGE'는 숫자형이고, 'setMemberAge'도 int형으로 주고받는데 'rs.getString("MEMBER_AGE")'로 데이터베이스의 값을 받아오려고 하고 있습니다. 수정해줘야 합니다.

4. 3번 아래의 두 rs.getString("~") 항목에서, 각각 'PHONE' 과 'ADDR'로 값을 읽어들이려고 하고 있습니다. 테이블 컬럼 이름은 'MEMBER_PHONE'과 'MEMBER_ADDR'이므로 오류가 날 것입니다. 수정해줘야 합니다.

[해결책]
a. ojdbc6을 classpath에 external jar로 추가해주었습니다.

1. stmt를 Statemnet 형에서 PreparedStatement 형으로 바꿔주어 해결하였습니다.

2. executeQuery() 함수가 불리는 상단에 'stmt.setString(1, memberId)'를 추가해주어 해결하였습니다.

3. 'rs.getString("MEMBER_AGE")'부분을 'rs.getInt("MEMBER_AGE")'로 수정하여 해결하였습니다.

4. 두 부분을 각각 'PHONE'에서 'MEMBER_PHONE', 'ADDR'에서 'MEMBER_ADDR'로 수정해주어 해결하였습니다.


[해결 후 코드들]
<<TestDAO (소스코드)>>
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class TestDAO {
	public ShopMember searchUser(String memberId) {
		Connection con = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		String url = "jdbc:oracle:thin:@localhost:1521:xe";
		String user = "test_01";
		String password = "1234";
		ShopMember shopMember = null;
		try {
			con = DriverManager.getConnection(url, user, password);
			String query = "select * from SHOP_MEMBER where MEMBER_ID = ?";
			stmt = con.prepareStatement(query);
			stmt.setString(1, memberId);
			rs = stmt.executeQuery();
			if(rs.next()) {
				shopMember = new ShopMember();
				shopMember.setMemberId(rs.getString("MEMBER_ID"));
				shopMember.setMemberPw(rs.getString("MEMBER_PW"));
				shopMember.setMemberName(rs.getString("MEMBER_NAME"));
				shopMember.setMemberAge(rs.getInt("MEMBER_AGE"));
				shopMember.setPhone(rs.getString("MEMBER_PHONE"));
				shopMember.setAddr(rs.getString("MEMBER_ADDR"));
			}
			rs.close();
			stmt.close();
			con.close();
		}catch(SQLException e) {
			e.printStackTrace();
		}
		return shopMember;
	}
}
<<ShopMember>>
public class ShopMember {
	private String memberId;
	private String memberPw;
	private String memberName;
	private int memberAge;
	private String phone;
	private String addr;

	public ShopMember() {}
	public String getMemberId() {return memberId;}
	public void setMemberId(String memberId) {this.memberId = memberId;}
	public String getMemberPw() {return memberPw;}
	public void setMemberPw(String memberPw) {this.memberPw = memberPw;}
	public String getMemberName() {return memberName;}
	public void setMemberName(String memberName) {this.memberName = memberName;}
	public int getMemberAge() {return memberAge;}
	public void setMemberAge(int memberAge) {this.memberAge = memberAge;}
	public String getPhone() {return phone;}
	public void setPhone(String phone) {this.phone = phone;}
	public String getAddr() {return addr;}
	public void setAddr(String addr) {this.addr = addr;}
}

<<Main>>
public class Main {
	public static void main(String[] args) {
		
		ShopMember mem = new TestDAO().searchUser("TOM");
		System.out.println(mem.getMemberId());
		System.out.println(mem.getMemberPw());
		System.out.println(mem.getMemberName());
		System.out.println(mem.getMemberAge());
		System.out.println(mem.getPhone());
		System.out.println(mem.getAddr());
	}
}

[<<DBMS>>]
create table SHOP_MEMBER(
    MEMBER_ID varchar2(20) primary key,
    MEMBER_PW varchar2(20) not null,
    MEMBER_NAME varchar2(20) not null,
    MEMBER_AGE number(3),
    MEMBER_PHONE varchar2(16) not null,
    MEMBER_ADDR varchar(100)
);

insert into SHOP_MEMBER values ('1234', '1234', 'TOM', 20, '01012341234', 'abcde');
insert into SHOP_MEMBER values ('TOM', '1234', 'TOM', 20, '01012341234', 'abcde');

commit;

select * from SHOP_MEMBER where MEMBER_ID = '1234';



